
package airplanebookingsystem;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;


public class AirplaneBookingSystem extends javax.swing.JFrame {

   
   
    
    ArrayList<Seat> seats = new ArrayList<Seat>();
    ArrayList<Booked_Seat> bookedseats = new ArrayList<Booked_Seat>();
    
    public ArrayList<Seat> getArrayListseats(){
        return seats;
    }
    
    public ArrayList<Booked_Seat> getArrayListbookedseats(){
        return bookedseats;
    }
    
    Seat[][] firstseats = new Seat[10][2];
    Seat[][] businessseats = new Seat[30][3];
    Seat[][] econseats = new Seat[30][3];
    int totalnumberofseats = firstseats.length*firstseats[0].length + businessseats.length*businessseats[0].length + econseats.length*econseats[0].length;
    
     
 
   
    public AirplaneBookingSystem() {
        initComponents();
        setLocationRelativeTo(null);
       BookedSeatsTable.getTableHeader().setResizingAllowed(false);
        setup();
        gridToSeats();
    }
    
    public void DisplayBookedSeatsTable(int seatindexnumber){
                    Object[] row = {bookedseats.get(seatindexnumber).getName(),bookedseats.get(seatindexnumber).getAge(),bookedseats.get(seatindexnumber).getSeatIndexNumber(),bookedseats.get(seatindexnumber).getAvailability(),bookedseats.get(seatindexnumber).getSeatclass(),bookedseats.get(seatindexnumber).getSeattype(),bookedseats.get(seatindexnumber).getRow(),bookedseats.get(seatindexnumber).getCol()};
                   model.addRow(row);      
    }
    
    public void ClearBookedSeatsTable(){     
           model.setRowCount(0);     
    }
    
    String[][] data = { {"hi","bye"} , {"good", "bad"}, {"iiii","ii"} };
    String[] col = {"Name","Age", "Seat Number", "Availability", "Seat Class", "Seat Type", "Row Number", "Column Number"};
    
    MyModel model = new MyModel(data, col);
    
   
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        panelDraw = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookedSeatsTable = new javax.swing.JTable();
        DisplayBookedSeats = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        Draw = new javax.swing.JMenuItem();
        BookASeat = new javax.swing.JMenuItem();
        UnbookASeat = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("                                              Welcome to the Flight Booking Site for Flight 420!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText(" Seats on Flight 420");

        javax.swing.GroupLayout panelDrawLayout = new javax.swing.GroupLayout(panelDraw);
        panelDraw.setLayout(panelDrawLayout);
        panelDrawLayout.setHorizontalGroup(
            panelDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDrawLayout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(121, 121, 121))
        );
        panelDrawLayout.setVerticalGroup(
            panelDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDrawLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Booked Seats for Flight 420");

        BookedSeatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        BookedSeatsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(BookedSeatsTable);

        DisplayBookedSeats.setText("Display Booked Seats");
        DisplayBookedSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayBookedSeatsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(356, 356, 356)
                        .addComponent(DisplayBookedSeats)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayBookedSeats)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jMenu3.setText("Menu");

        Draw.setText("Draw Seats");
        Draw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawActionPerformed(evt);
            }
        });
        jMenu3.add(Draw);

        BookASeat.setText("Book a Seat");
        BookASeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookASeatActionPerformed(evt);
            }
        });
        jMenu3.add(BookASeat);

        UnbookASeat.setText("Unbook a Seat");
        UnbookASeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnbookASeatActionPerformed(evt);
            }
        });
        jMenu3.add(UnbookASeat);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelDraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrawActionPerformed
        draw();
    }//GEN-LAST:event_DrawActionPerformed

    
       public void recData(String s) {
        jLabel1.setText(s);
    }
    private void BookASeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookASeatActionPerformed
       BookASeat book = new BookASeat(this);
       book.setVisible(true);
    }//GEN-LAST:event_BookASeatActionPerformed

    private void DisplayBookedSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayBookedSeatsActionPerformed
       BookedSeatsTable.setModel(model);
       ClearBookedSeatsTable();
       for(int abcd=0;abcd<bookedseats.size();abcd++){
    DisplayBookedSeatsTable(abcd);
}
       if(model.getRowCount()==0){
             Object[] row = {null,null,"There are","no booked", "seats right","now",null,null};
                   model.addRow(row);
        }
    }//GEN-LAST:event_DisplayBookedSeatsActionPerformed

    private void UnbookASeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnbookASeatActionPerformed
        UnbookASeat book = new UnbookASeat(this);
       book.setVisible(true);
    }//GEN-LAST:event_UnbookASeatActionPerformed

    
    public void draw() {
       Graphics g = panelDraw.getGraphics();
        g.setColor(Color.GREEN);
        
          for(int r=0; r<firstseats.length; r++){
            for(int c=0; c<firstseats[0].length; c++){
                if(firstseats[r][c].getAvailability()){
                g.setColor(Color.GREEN);
                g.drawRect(50+firstseats[r][c].getCol()*20 +(133),firstseats[r][c].getRow()*14 +(40),18,8);
                }
                else{
                g.setColor(Color.RED);
                g.drawRect(50+firstseats[r][c].getCol()*20 +(133),firstseats[r][c].getRow()*14 +(40),18,8);
                }
            }   
        }
   
      for(int r=0; r<businessseats.length; r++){
            for(int c=0; c<businessseats[0].length; c++){
                if(businessseats[r][c].getAvailability()){
                g.setColor(Color.GREEN);
                g.drawRect(businessseats[r][c].getCol()*20 +(133),5+businessseats[r][c].getRow()*14 +(40),18,8);
                }
                else{
                g.setColor(Color.RED);
                g.drawRect(businessseats[r][c].getCol()*20 +(133),5+businessseats[r][c].getRow()*14 +(40),18,8);   
                }
            }   
        }
      for(int r=0; r<econseats.length; r++){
            for(int c=0; c<econseats[0].length; c++){
                if(econseats[r][c].getAvailability()){
                g.setColor(Color.GREEN);    
                g.drawRect(20+econseats[r][c].getCol()*20 +(133),5+econseats[r][c].getRow()*14 +(40),18,8);
                }
                else{
                g.setColor(Color.RED);    
                g.drawRect(20+econseats[r][c].getCol()*20 +(133),5+econseats[r][c].getRow()*14 +(40),18,8);
                }
            }   
        }
        
        /*for(int firstr=0; firstr<firstseats.length; firstr++){
            for(int firstc=0; firstc<firstseats[0].length; firstc++){

                g.drawRect(firstc,firstr,50,20);
                
            }   
        }
       

        for(int businessr=0; businessr<businessseats.length; businessr++){
            for(int businessc=0; businessc<businessseats[0].length; businessc++){

                g.drawRect(businessc,businessr,50,20);
                
            }   
        }
        
   
        for(int econr=0; econr<econseats.length; econr++){
            for(int econc=0; econc<econseats[0].length; econc++){

                g.drawRect(econc,econr,50,20);
                
            }   
        }*/

    }
    
    
    public void setup(){
        
        // filling all 3 2d Arrays with seats  
        int indexnum=0;
        
      for(int r=0; r<firstseats.length; r++){
            for(int c=0; c<firstseats[0].length; c++){
                firstseats[r][c]=new Seat(r,c,"FirstClass", "Aisle",indexnum);
                indexnum++;
            }   
        }
   
      for(int r=0; r<businessseats.length; r++){
            for(int c=0; c<businessseats[0].length; c++){
                String x = null;
                if (c==0){
                    x = "Window";
                }
                else if (c==1){
                    x = "Middle";
                }
                else{
                    x= "Aisle";
                }
                businessseats[r][c]=new Seat(firstseats.length+r,c,"BusinessClass",x,indexnum);
                indexnum++;
            }   
        }
      for(int r=0; r<econseats.length; r++){
            for(int c=0; c<econseats[0].length; c++){
                String x = null;
                if (c==0){
                    x = "Aisle";
                }
                else if (c==1){
                    x = "Middle";
                }
                else{
                    x= "Window";
                }
                econseats[r][c]=new Seat(firstseats.length+r,businessseats[0].length+c,"EconomyClass",x,indexnum);
                indexnum++;
            }   
        }
  
      
 


    }
    
    public void gridToSeats() {
       seats.clear();
       for(int r=0; r<firstseats.length; r++){
            for(int c=0; c<firstseats[0].length; c++){
               seats.add(firstseats[r][c]);
            }   
        }
   
      for(int r=0; r<businessseats.length; r++){
            for(int c=0; c<businessseats[0].length; c++){
                seats.add(businessseats[r][c]);
            }   
        }
       for(int r=0; r<econseats.length; r++){
            for(int c=0; c<econseats[0].length; c++){
               seats.add(econseats[r][c]);
            }   
        }
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirplaneBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirplaneBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirplaneBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirplaneBookingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirplaneBookingSystem().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BookASeat;
    private javax.swing.JTable BookedSeatsTable;
    private javax.swing.JButton DisplayBookedSeats;
    private javax.swing.JMenuItem Draw;
    private javax.swing.JMenuItem UnbookASeat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelDraw;
    // End of variables declaration//GEN-END:variables
}
